Turbo Assembler	 Version 5.3	    05-23-18 12:14:37	    Page 1
PPSTART.ASM



      1					 .386
      2	00000000			 .model	FLAT,C
      3					 PUBLIC	START
      4					 extern	COUNT:near, X_Y:near, SetCler:near, X_U_Y:near
      5
      6	00000000			 .DATA
      7	00000000  00000000 00000000   +	 S	 DD 0,0,0,0
      8		  00000000 00000000
      9	00000010  0F0F0F0F 00000055	 S1	 DD 00001111000011110000111100001111B,1010101B
     10						    ;0-38 - разряды строки
     11	00000018  3C3C3C3C 00000041	 S2	 DD 00111100001111000011110000111100B,1000001B
     12						    ;0-38 - разряды строки
     13	00000020  00000027		 L DD 39    ;= длина строки
     14					 ; DD он же DWORD - двойное слово, занимает 4 байта
     15
     16					 ;СОГЛАШЕНИЯ TURBO C
     17					 ;1. Параметры передаются в стек справа	налево
     18					 ;2. Функция должна сохранять регистры DS, CS, SS, BP, SI, DI
     19					 ;3. Функция возвращает	результат через	AX или DX:AX, причем в	DX
     20					 ; - старшая часть числа.
     21					 ;4. Освобождение стека	от параметров выполняет	вызывающая программа
     22
     23	00000024			 .CODE
     24	00000000			 START:
     25						 ; Согласно соглашению передаем	все аргументы по стеку в прямом	порядке
     26	00000000  55			    push ebp
     27	00000001  8B EC			    mov	ebp,esp
     28
     29					    ; Обратный порядок пушей
     30	00000003  FF 35	00000020r	    PUSH L
     31	00000009  68 00000010r		    PUSH OFFSET	S1
     32	0000000E  E8 00000000e		    CALL COUNT;	(const S: LONGWORD; L:LONGWORD)
     33	00000013  83 C4	08		    ADD	ESP, 8;	Память освобождаем здесь же
     34
     35	00000016  6A 01			    PUSH 1
     36	00000018  6A 01			    PUSH 1
     37	0000001A  FF 35	00000020r	    PUSH L
     38	00000020  68 00000018r		    PUSH OFFSET	S2
     39	00000025  E8 00000000e		    CALL SetCler; (var S:LONGWORD; L:LONGWORD; N:LONGWORD; P:LONGWORD)
     40	0000002A  83 C4	0C		    ADD	ESP, 12;
     41
     42	0000002D  6A 00			    PUSH 0
     43	0000002F  6A 22			    PUSH 34
     44	00000031  FF 35	00000020r	    PUSH L
     45	00000037  68 00000018r		    PUSH OFFSET	S2
     46	0000003C  E8 00000000e		    CALL SetCler; (var S:LONGWORD; L:LONGWORD; N:LONGWORD; P:LONGWORD)
     47	00000041  83 C4	0C		    ADD	ESP, 12;
     48
     49	00000044  FF 35	00000020r	    PUSH L
     50	0000004A  68 00000018r		    PUSH OFFSET	S2
     51	0000004F  68 00000010r		    PUSH OFFSET	S1
     52	00000054  E8 00000000e		    CALL X_Y; (var A: LONGWORD;	const B:LONGWORD; L:LONGWORD)
     53	00000059  83 C4	08		    ADD	ESP, 8;	разобрано
     54
     55	0000005C  FF 35	00000020r	    PUSH L
     56	00000062  68 00000018r		    PUSH OFFSET	S2
     57	00000067  68 00000010r		    PUSH OFFSET	S1
Turbo Assembler	 Version 5.3	    05-23-18 12:14:37	    Page 2
PPSTART.ASM



     58	0000006C  E8 00000000e		    CALL X_U_Y;	(var X:	LONGWORD; const	Y:LONGWORD; L:LONGWORD)
     59	00000071  83 C4	08		    ADD	ESP, 8;	разобрано
     60
     61	00000074  5D			    POP	EBP
     62
     63	00000075  C3			    RET
     64					 END
Turbo Assembler	 Version 5.3	    05-23-18 12:14:37	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "05-23-18"
??FILENAME			  Text	 "PPSTART "
??TIME				  Text	 "12:14:37"
??VERSION			  Number 0503
@32BIT				  Text	 1
@CODE				  Text	 FLAT
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 FLAT
@DATASIZE			  Text	 0
@FILENAME			  Text	 PPSTART
@INTERFACE			  Text	 001H
@MODEL				  Text	 1
@STACK				  Text	 FLAT
@WORDSIZE			  Text	 4
COUNT (_COUNT)			  Near32 ----:---- Extern
L				  Dword	 FLAT:0020
S				  Dword	 FLAT:0000
S1				  Dword	 FLAT:0010
S2				  Dword	 FLAT:0018
SETCLER	(_SETCLER)		  Near32 ----:---- Extern
START (_START)			  Near32 FLAT:0000
X_U_Y (_X_U_Y)			  Near32 ----:---- Extern
X_Y (_X_Y)			  Near32 ----:---- Extern

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  32  0024 Dword  Public  DATA
FLAT				  Group
_TEXT				  32  0076 Dword  Public  CODE
