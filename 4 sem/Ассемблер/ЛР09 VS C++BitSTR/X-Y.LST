Turbo Assembler	 Version 5.3	    05-23-18 12:14:39	    Page 1
X-Y.ASM



      1					 ;—оставить подпрограмму с именем A_B типа
      2					 ;   Procedure (var A: LONGWORD; const B:LONGWORD; L:LONGWORD)
      3					 ;выполн€ющую вычитание	битовых	строк A:=A \ B длины L.
      4
      5					 .386
      6	00000000			 .model	FLAT,C
      7					 PUBLIC	X_Y
      8
      9	00000000			 .CODE
     10	00000000			 X_Y PROC
     11	00000000  55			   PUSH	EBP
     12	00000001  8B EC			   MOV EBP,ESP
     13
     14		  = DWORD PTR[EBP+8]	   X EQU DWORD PTR[EBP+8]	    ;первая строка
     15		  = DWORD PTR[EBP+12]	   Y EQU DWORD PTR[EBP+12]	     ;вторая строка
     16		  = DWORD PTR[EBP+16]	   L EQU DWORD PTR[EBP+16]	    ;длина строк
     17
     18
     19	00000003  8B 4D	10		   MOV ECX,L			 ;CX = длина строки
     20	00000006  C1 E9	05		   SHR ECX,5
     21	00000009  41			   INC ECX
     22	0000000A  8B 55	08		   MOV EDX,X
     23	0000000D  8B 5D	0C		   MOV EBX,Y
     24
     25	00000010			 M1:
     26					   ; Напомню, что EAX -	наш return из си(не путать со здешним супер pop)
     27	00000010  8B 03			   MOV EAX,[EBX]
     28	00000012  F7 D0			   NOT EAX
     29	00000014  23 02			   AND EAX,[EDX]
     30
     31	00000016  83 C2	04		   ADD EDX,4 ;
     32	00000019  83 C3	04		   ADD EBX,4
     33
     34	0000001C  E2 F2			   LOOP	M1
     35
     36	0000001E  5D			   POP EBP ; Восстановили регистры
1    37	0000001F  C3				 RET	 00000h
     38	00000020			 X_Y ENDP ;Вообще не сходится, но какая	разница. Здесь лучше
     39					 END
Turbo Assembler	 Version 5.3	    05-23-18 12:14:39	    Page 2
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "05-23-18"
??FILENAME			  Text	 "X-Y	  "
??TIME				  Text	 "12:14:39"
??VERSION			  Number 0503
@32BIT				  Text	 1
@CODE				  Text	 FLAT
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 FLAT
@DATASIZE			  Text	 0
@FILENAME			  Text	 X-Y
@INTERFACE			  Text	 001H
@MODEL				  Text	 1
@STACK				  Text	 FLAT
@WORDSIZE			  Text	 4
L				  Text	 DWORD PTR[EBP+16]
M1				  Near32 FLAT:0010
X				  Text	 DWORD PTR[EBP+8]
X_Y (_X_Y)			  Near32 FLAT:0000
Y				  Text	 DWORD PTR[EBP+12]

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  32  0000 Dword  Public  DATA
FLAT				  Group
_TEXT				  32  0020 Dword  Public  CODE
